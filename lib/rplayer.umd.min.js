(function(u,p){typeof exports=="object"&&typeof module<"u"?module.exports=p():typeof define=="function"&&define.amd?define(p):(u=typeof globalThis<"u"?globalThis:u||self,u.RPlayer=p())})(this,function(){"use strict";async function u(c,e,t,a=!0){if(c.canPlayType("application/vnd.apple.mpegurl"))return console.log("Using native HLS support"),c.src=e,new Promise(i=>{c.addEventListener("loadedmetadata",()=>{if(a){const r=c.play();r!==void 0&&r.catch(s=>{console.warn("Auto-play was prevented, user interaction may be needed",s)})}i(null)},{once:!0})});try{const{default:i}=await import("hls.js");if(i.isSupported()){const r=new i({maxBufferLength:30,maxMaxBufferLength:60,liveSyncDurationCount:3,enableWorker:!0,lowLatencyMode:!0,fragLoadingMaxRetry:5,manifestLoadingMaxRetry:5,levelLoadingMaxRetry:5});return r.on(i.Events.ERROR,(s,o)=>{if(o.fatal)switch(o.type){case i.ErrorTypes.NETWORK_ERROR:console.warn("Network error encountered, trying to recover",o),r.startLoad();break;case i.ErrorTypes.MEDIA_ERROR:console.warn("Media error encountered, trying to recover",o),r.recoverMediaError();break;default:console.error("Fatal error encountered, cannot recover",o);break}}),r.loadSource(e),r.attachMedia(c),r.on(i.Events.MANIFEST_PARSED,()=>{if(a){const s=c.play();s!==void 0&&s.catch(o=>{console.warn("Auto-play was prevented, user interaction may be needed",o)})}}),r}else throw new Error("HLS.js is not supported in this browser")}catch(i){throw console.error("Failed to load or initialize hls.js:",i),new Error("Failed to load or initialize HLS support: "+(i instanceof Error?i.message:String(i)))}}async function p(c,e){try{if(console.log(`Fetching M3U playlist from: ${e}`),!e.startsWith("http://")&&!e.startsWith("https://")){const i=window.location.origin;e.startsWith("/")?e=i+e:e=i+"/"+e.replace(/^\.\//,""),console.log(`Local file detected, using absolute URL: ${e}`)}const t=new AbortController,a=setTimeout(()=>t.abort(),1e4);try{const i=await fetch(e,{signal:t.signal,mode:"cors",credentials:"same-origin"});if(clearTimeout(a),!i.ok)throw new Error(`Failed to fetch M3U playlist: ${i.status}`);const r=await i.text();console.log(`M3U content fetched, size: ${r.length} bytes`);const s=r.split(`
`),o=[];let l="";for(let y=0;y<s.length;y++){const h=s[y].trim();if(!h)continue;if(h.startsWith("#EXTINF:")){const d=h.match(/#EXTINF:.*,(.+)/);d&&d[1]&&(l=d[1].trim());continue}if(h.startsWith("#"))continue;let m=h;if(!h.match(/^(https?:\/\/|rtmp:\/\/|rtsp:\/\/)/i))try{const d=new URL(e);m=new URL(h,d.href).href}catch(d){console.warn(`Could not resolve relative URL: ${h}`,d)}(!m.match(/\.(m3u8|mp4|mkv|avi|mov|flv|wmv|ts)$/i)||m.match(/\.(mp3|aac|ogg|opus|wav|m4a)$/i)||m.includes("audio")||!m.includes("video"))&&o.push({url:m,title:l||`Track ${o.length+1}`}),l=""}if(console.log(`Found ${o.length} audio URLs in playlist`),o.length===0)throw new Error("No audio URLs found in M3U playlist");const n=o[0];return console.log(`Found first entry in M3U playlist: ${n.title} (${n.url})`),typeof window<"u"&&(window.__currentM3UPlaylist=o,window.__currentM3UIndex=0),c instanceof HTMLAudioElement&&(c.__trackTitle=n.title||"",c.__trackSource="M3U Playlist","mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:n.title||"Unknown Track",artist:"RPlayer M3U",album:"M3U Playlist",artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]}))),n.url}catch(i){throw console.error("Error fetching M3U playlist:",i),new Error(`Timeout or network error fetching playlist: ${i instanceof Error?i.message:String(i)}`)}}catch(t){throw console.error("Error playing M3U playlist:",t),new Error(`Failed to play M3U playlist: ${t instanceof Error?t.message:String(t)}`)}}class g extends Audio{constructor(e){super(),this.hls=null,this.isHls=!1,this.lastSrc="",this.errorHandlers=[],this.playbackHandlers=[],this.initializeVolume(),this.setupEventListeners(),e&&setTimeout(()=>{this.playSrc(e).catch(t=>{console.error("Failed to play initial source:",t)})},0)}initializeVolume(){try{const e=localStorage.getItem("RPlayer-volume");if(e!==null){const t=parseFloat(e);!isNaN(t)&&t>=0&&t<=1&&(this.volume=t)}}catch(e){console.warn("Could not retrieve volume settings from localStorage",e)}}setupEventListeners(){this.addEventListener("volumechange",()=>{try{localStorage.setItem("RPlayer-volume",this.volume.toString())}catch(e){console.warn("Could not save volume settings to localStorage",e)}}),this.addEventListener("error",e=>{const t=new Error(`Media error: ${this.error?.code??"unknown"}`);this.errorHandlers.forEach(a=>a(t))}),this.addEventListener("play",()=>{this.playbackHandlers.forEach(e=>e("playing"))}),this.addEventListener("pause",()=>{this.playbackHandlers.forEach(e=>e("paused"))})}isHlsUrl(e){const t=e.toString();if(t.endsWith(".m3u8"))return!0;try{return t.startsWith("http://")||t.startsWith("https://")?new URL(t).pathname.endsWith(".m3u8"):!1}catch{return console.warn("URL parsing failed in isHlsUrl, using fallback check:",t),!1}}isM3uUrl(e){const t=e.toString();if(t.endsWith(".m3u")&&!t.endsWith(".m3u8"))return!0;try{if(t.startsWith("http://")||t.startsWith("https://")){const a=new URL(t);return a.pathname.endsWith(".m3u")&&!a.pathname.endsWith(".m3u8")}return!1}catch{return console.warn("URL parsing failed in isM3uUrl, using fallback check:",t),!1}}get isIOS(){return/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window)}get isHlsjs(){return this.isHls}get isPlaying(){return!this.paused}get url(){return this.lastSrc}onPlaybackStatusChange(e){this.playbackHandlers.push(e)}onError(e){this.errorHandlers.push(e)}removePlaybackStatusHandler(e){const t=this.playbackHandlers.indexOf(e);t!==-1&&this.playbackHandlers.splice(t,1)}removeErrorHandler(e){const t=this.errorHandlers.indexOf(e);t!==-1&&this.errorHandlers.splice(t,1)}async playSrc(e){if(console.log(`[RPlayer] playSrc appelé avec: ${e}`),e.startsWith("/")&&!e.startsWith("//")&&typeof window<"u"&&(e=`${window.location.origin}${e}`,console.log(`[RPlayer] URL relative convertie en absolue: ${e}`)),this.lastSrc===e&&this.paused&&this.currentTime>0)try{console.log(`[RPlayer] Même source détectée, reprise de la lecture: ${e}`),await this.play();return}catch(t){console.warn("[RPlayer] Erreur lors de la reprise de la lecture, tentative de rechargement",t)}try{this.stop();const t=this.isHlsUrl(e),a=this.isM3uUrl(e);console.log(`[RPlayer] Type de source: ${t?"HLS":a?"M3U standard":"Direct"}`);let i="Direct";if(t?i="HLS":a&&(i="M3U standard"),console.log(`[RPlayer] Type de source: ${i}`),t)try{const r=await u(this,e);return this.hls=r,this.lastSrc=e,this.isHls=!0,new Promise((s,o)=>{const l=()=>{this.removeEventListener("playing",l),this.removeEventListener("error",n),s()},n=()=>{this.removeEventListener("playing",l),this.removeEventListener("error",n),o(new Error(`Failed to load HLS source: ${e}`))};this.paused?(this.addEventListener("playing",l),this.addEventListener("error",n)):s()})}catch(r){throw console.error("Error initializing HLS playback:",r),r}else if(this.isM3uUrl(e))try{console.log(`[RPlayer] Attempting to play M3U standard playlist: ${e}`);const r=await p(this,e);if(console.log(`[RPlayer] URL extracted from M3U playlist: ${r}`),r===e)throw new Error("The URL extracted from the playlist is identical to the playlist URL");if(this.lastSrc=e,"mediaSession"in navigator&&navigator.mediaSession){let s="Radio Station";try{const l=new URL(r).pathname.split("/"),n=l[l.length-1];n&&(s=n.replace(/\.(mp3|aac|ogg|m4a|wav)$/i,"").replace(/[_-]/g," "))}catch(o){console.warn("Failed to extract title from URL:",o)}navigator.mediaSession.metadata=new MediaMetadata({title:s,artist:"RPlayer M3U",album:"M3U Playlist",artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]})}return console.log(`[RPlayer] Redirecting to: ${r}`),this.playSrc(r)}catch(r){console.error("[RPlayer] Erreur lors de la lecture de la playlist M3U:",r);const s=r instanceof Error?r:new Error(`Échec de l'analyse de la playlist M3U: ${String(r)}`);throw this.errorHandlers.forEach(o=>o(s)),s}else{console.log(`[RPlayer] Tentative de lecture directe: ${e}`),this.src=e,this.lastSrc=e,this.isHls=!1;try{await this.play(),console.log("[RPlayer] Lecture directe réussie");return}catch(r){console.error("[RPlayer] Erreur lors de la lecture directe:",r);const s=new Error(`Échec de la lecture de la source: ${e}`);throw this.errorHandlers.forEach(o=>o(s)),s}}}catch(t){throw console.error("Error playing source",t),this.errorHandlers.forEach(a=>a(t instanceof Error?t:new Error(String(t)))),t}}async loadSrc(e){console.log(`[RPlayer] loadSrc appelé avec: ${e}`),e.startsWith("/")&&!e.startsWith("//")&&typeof window<"u"&&(e=`${window.location.origin}${e}`,console.log(`[RPlayer] URL relative convertie en absolue: ${e}`));try{this.stop();const t=this.isHlsUrl(e),a=this.isM3uUrl(e);let i="Direct";if(t?i="HLS":a&&(i="M3U standard"),console.log(`[RPlayer] Type de source: ${i}`),t)try{const r=await u(this,e,void 0,!1);return this.hls=r,this.lastSrc=e,this.isHls=!0,Promise.resolve()}catch(r){throw console.error("Error initializing HLS source:",r),r}else if(this.isM3uUrl(e))try{console.log(`[RPlayer] Attempting to load M3U standard playlist: ${e}`);const r=await p(this,e);if(console.log(`[RPlayer] URL extracted from M3U playlist: ${r}`),r===e)throw new Error("The URL extracted from the playlist is identical to the playlist URL");return this.lastSrc=e,this.loadSrc(r)}catch(r){console.error("[RPlayer] Erreur lors du chargement de la playlist M3U:",r);const s=r instanceof Error?r:new Error(`Échec de l'analyse de la playlist M3U: ${String(r)}`);throw this.errorHandlers.forEach(o=>o(s)),s}else return console.log(`[RPlayer] Chargement direct sans lecture: ${e}`),this.src=e,this.lastSrc=e,this.isHls=!1,new Promise((r,s)=>{const o=()=>{this.removeEventListener("loadedmetadata",o),this.removeEventListener("error",l),r()},l=()=>{this.removeEventListener("loadedmetadata",o),this.removeEventListener("error",l);const n=new Error(`Échec du chargement de la source: ${e}`);this.errorHandlers.forEach(y=>y(n)),s(n)};this.addEventListener("loadedmetadata",o,{once:!0}),this.addEventListener("error",l,{once:!0}),this.load()})}catch(t){throw console.error("Error loading source",t),this.errorHandlers.forEach(a=>a(t instanceof Error?t:new Error(String(t)))),t}}stop(){this.pause(),this.currentTime=0,this.hls&&(this.hls.destroy(),this.hls=null),this.isHls=!1,this.playbackHandlers.forEach(e=>e("stopped"))}rewind(e){this.currentTime=Math.max(this.currentTime-e,0)}forward(e){this.duration&&isFinite(this.duration)?this.currentTime=Math.min(this.currentTime+e,this.duration):this.currentTime+=e}upVolume(){this.volume=Math.min(this.volume+.1,1),this.volume=parseFloat(this.volume.toFixed(2))}downVolume(){this.volume=Math.max(this.volume-.1,0),this.volume=parseFloat(this.volume.toFixed(2))}setVolume(e){if(e<0||e>1)throw new Error("Volume level must be between 0 and 1");this.volume=parseFloat(e.toFixed(2))}mute(){this.muted=!this.muted}updateMediaSessionMetadata(e="",t="RPlayer",a="Audio Stream"){if("mediaSession"in navigator)try{navigator.mediaSession.metadata=new MediaMetadata({title:e||this.lastSrc||"Unknown Track",artist:t,album:a,artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]}),console.log(`[RPlayer] MediaSession metadata updated: ${e}`)}catch(i){console.error("[RPlayer] Error updating MediaSession metadata:",i)}}destroy(){if(this.stop(),this.playbackHandlers.length=0,this.errorHandlers.length=0,"mediaSession"in navigator)try{["play","pause","stop","seekforward","seekbackward","previoustrack","nexttrack"].forEach(e=>{try{navigator.mediaSession.setActionHandler(e,null)}catch{}})}catch(e){console.warn("[RPlayer] Error clearing MediaSession handlers:",e)}this.hls&&(this.hls.destroy(),this.hls=null)}}return g});
//# sourceMappingURL=rplayer.umd.min.js.map
