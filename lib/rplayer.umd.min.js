(function(h,c){typeof exports=="object"&&typeof module<"u"?module.exports=c():typeof define=="function"&&define.amd?define(c):(h=typeof globalThis<"u"?globalThis:h||self,h.RPlayer=c())})(this,function(){"use strict";var w=Object.defineProperty;var v=(h,c,y)=>c in h?w(h,c,{enumerable:!0,configurable:!0,writable:!0,value:y}):h[c]=y;var f=(h,c,y)=>v(h,typeof c!="symbol"?c+"":c,y);async function h(u,l,e,t=!0){if(u.canPlayType("application/vnd.apple.mpegurl"))return console.log("Using native HLS support"),u.src=l,new Promise(r=>{u.addEventListener("loadedmetadata",()=>{if(t){const s=u.play();s!==void 0&&s.catch(o=>{console.warn("Auto-play was prevented, user interaction may be needed",o)})}r(null)},{once:!0})});try{const{default:r}=await import("hls.js");if(r.isSupported()){const s=new r({maxBufferLength:30,maxMaxBufferLength:60,liveSyncDurationCount:3,enableWorker:!0,lowLatencyMode:!0,fragLoadingMaxRetry:5,manifestLoadingMaxRetry:5,levelLoadingMaxRetry:5});return s.on(r.Events.ERROR,(o,i)=>{if(i.fatal)switch(i.type){case r.ErrorTypes.NETWORK_ERROR:console.warn("Network error encountered, trying to recover",i),s.startLoad();break;case r.ErrorTypes.MEDIA_ERROR:console.warn("Media error encountered, trying to recover",i),s.recoverMediaError();break;default:console.error("Fatal error encountered, cannot recover",i);break}}),s.loadSource(l),s.attachMedia(u),s.on(r.Events.MANIFEST_PARSED,()=>{if(t){const o=u.play();o!==void 0&&o.catch(i=>{console.warn("Auto-play was prevented, user interaction may be needed",i)})}}),s}else throw new Error("HLS.js is not supported in this browser")}catch(r){throw console.error("Failed to load or initialize hls.js:",r),new Error("Failed to load or initialize HLS support: "+(r instanceof Error?r.message:String(r)))}}async function c(u,l){try{if(console.log(`Fetching M3U playlist from: ${l}`),!l.startsWith("http://")&&!l.startsWith("https://")){const r=window.location.origin;l.startsWith("/")?l=r+l:l=r+"/"+l.replace(/^\.\//,""),console.log(`Local file detected, using absolute URL: ${l}`)}const e=new AbortController,t=setTimeout(()=>e.abort(),1e4);try{const r=await fetch(l,{signal:e.signal,mode:"cors",credentials:"same-origin"});if(clearTimeout(t),!r.ok)throw new Error(`Failed to fetch M3U playlist: ${r.status}`);const s=await r.text();console.log(`M3U content fetched, size: ${s.length} bytes`);const o=s.split(`
`),i=[];let a="";for(let d=0;d<o.length;d++){const p=o[d].trim();if(!p)continue;if(p.startsWith("#EXTINF:")){const m=p.match(/#EXTINF:.*,(.+)/);m&&m[1]&&(a=m[1].trim());continue}if(p.startsWith("#"))continue;let g=p;if(!p.match(/^(https?:\/\/|rtmp:\/\/|rtsp:\/\/)/i))try{const m=new URL(l);g=new URL(p,m.href).href}catch(m){console.warn(`Could not resolve relative URL: ${p}`,m)}(!g.match(/\.(m3u8|mp4|mkv|avi|mov|flv|wmv|ts)$/i)||g.match(/\.(mp3|aac|ogg|opus|wav|m4a)$/i)||g.includes("audio")||!g.includes("video"))&&i.push({url:g,title:a||`Track ${i.length+1}`}),a=""}if(console.log(`Found ${i.length} audio URLs in playlist`),i.length===0)throw new Error("No audio URLs found in M3U playlist");const n=i[0];return console.log(`Found first entry in M3U playlist: ${n.title} (${n.url})`),typeof window<"u"&&(window.__currentM3UPlaylist=i,window.__currentM3UIndex=0),u instanceof HTMLAudioElement&&(u.__trackTitle=n.title||"",u.__trackSource="M3U Playlist","mediaSession"in navigator&&(navigator.mediaSession.metadata=new MediaMetadata({title:n.title||"Unknown Track",artist:"RPlayer M3U",album:"M3U Playlist",artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]}))),n.url}catch(r){throw console.error("Error fetching M3U playlist:",r),new Error(`Timeout or network error fetching playlist: ${r instanceof Error?r.message:String(r)}`)}}catch(e){throw console.error("Error playing M3U playlist:",e),new Error(`Failed to play M3U playlist: ${e instanceof Error?e.message:String(e)}`)}}class y extends Audio{constructor(e){super();f(this,"hls",null);f(this,"isHls",!1);f(this,"lastSrc","");f(this,"errorHandlers",[]);f(this,"playbackHandlers",[]);this.initializeVolume(),this.setupEventListeners(),e&&setTimeout(()=>{this.playSrc(e).catch(t=>{console.error("Failed to play initial source:",t)})},0)}initializeVolume(){try{const e=localStorage.getItem("RPlayer-volume");if(e!==null){const t=parseFloat(e);!isNaN(t)&&t>=0&&t<=1&&(this.volume=t)}}catch(e){console.warn("Could not retrieve volume settings from localStorage",e)}}setupEventListeners(){this.addEventListener("volumechange",()=>{try{localStorage.setItem("RPlayer-volume",this.volume.toString())}catch(e){console.warn("Could not save volume settings to localStorage",e)}}),this.addEventListener("error",e=>{var r;const t=new Error(`Media error: ${((r=this.error)==null?void 0:r.code)??"unknown"}`);this.errorHandlers.forEach(s=>s(t))}),this.addEventListener("play",()=>{this.playbackHandlers.forEach(e=>e("playing"))}),this.addEventListener("pause",()=>{this.playbackHandlers.forEach(e=>e("paused"))})}isHlsUrl(e){const t=e.toString();if(t.endsWith(".m3u8"))return!0;try{return t.startsWith("http://")||t.startsWith("https://")?new URL(t).pathname.endsWith(".m3u8"):!1}catch{return console.warn("URL parsing failed in isHlsUrl, using fallback check:",t),!1}}isM3uUrl(e){const t=e.toString();if(t.endsWith(".m3u")&&!t.endsWith(".m3u8"))return!0;try{if(t.startsWith("http://")||t.startsWith("https://")){const r=new URL(t);return r.pathname.endsWith(".m3u")&&!r.pathname.endsWith(".m3u8")}return!1}catch{return console.warn("URL parsing failed in isM3uUrl, using fallback check:",t),!1}}get isIOS(){return/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window)}get isHlsjs(){return this.isHls}get isPlaying(){return!this.paused}get url(){return this.lastSrc}onPlaybackStatusChange(e){this.playbackHandlers.push(e)}onError(e){this.errorHandlers.push(e)}removePlaybackStatusHandler(e){const t=this.playbackHandlers.indexOf(e);t!==-1&&this.playbackHandlers.splice(t,1)}removeErrorHandler(e){const t=this.errorHandlers.indexOf(e);t!==-1&&this.errorHandlers.splice(t,1)}async playSrc(e){if(console.log(`[RPlayer] playSrc appelé avec: ${e}`),e.startsWith("/")&&!e.startsWith("//")&&typeof window<"u"&&(e=`${window.location.origin}${e}`,console.log(`[RPlayer] URL relative convertie en absolue: ${e}`)),this.lastSrc===e&&this.paused&&this.currentTime>0)try{console.log(`[RPlayer] Même source détectée, reprise de la lecture: ${e}`),await this.play();return}catch(t){console.warn("[RPlayer] Erreur lors de la reprise de la lecture, tentative de rechargement",t)}try{this.stop();const t=this.isHlsUrl(e),r=this.isM3uUrl(e);console.log(`[RPlayer] Type de source: ${t?"HLS":r?"M3U standard":"Direct"}`);let s="Direct";if(t?s="HLS":r&&(s="M3U standard"),console.log(`[RPlayer] Type de source: ${s}`),t)try{const o=await h(this,e);return this.hls=o,this.lastSrc=e,this.isHls=!0,new Promise((i,a)=>{const n=()=>{this.removeEventListener("playing",n),this.removeEventListener("error",d),i()},d=()=>{this.removeEventListener("playing",n),this.removeEventListener("error",d),a(new Error(`Failed to load HLS source: ${e}`))};this.paused?(this.addEventListener("playing",n),this.addEventListener("error",d)):i()})}catch(o){throw console.error("Error initializing HLS playback:",o),o}else if(this.isM3uUrl(e))try{console.log(`[RPlayer] Attempting to play M3U standard playlist: ${e}`);const o=await c(this,e);if(console.log(`[RPlayer] URL extracted from M3U playlist: ${o}`),o===e)throw new Error("The URL extracted from the playlist is identical to the playlist URL");if(this.lastSrc=e,"mediaSession"in navigator&&navigator.mediaSession){let i="Radio Station";try{const n=new URL(o).pathname.split("/"),d=n[n.length-1];d&&(i=d.replace(/\.(mp3|aac|ogg|m4a|wav)$/i,"").replace(/[_-]/g," "))}catch(a){console.warn("Failed to extract title from URL:",a)}navigator.mediaSession.metadata=new MediaMetadata({title:i,artist:"RPlayer M3U",album:"M3U Playlist",artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]})}return console.log(`[RPlayer] Redirecting to: ${o}`),this.playSrc(o)}catch(o){console.error("[RPlayer] Erreur lors de la lecture de la playlist M3U:",o);const i=o instanceof Error?o:new Error(`Échec de l'analyse de la playlist M3U: ${String(o)}`);throw this.errorHandlers.forEach(a=>a(i)),i}else{console.log(`[RPlayer] Tentative de lecture directe: ${e}`),this.src=e,this.lastSrc=e,this.isHls=!1;try{await this.play(),console.log("[RPlayer] Lecture directe réussie");return}catch(o){console.error("[RPlayer] Erreur lors de la lecture directe:",o);const i=new Error(`Échec de la lecture de la source: ${e}`);throw this.errorHandlers.forEach(a=>a(i)),i}}}catch(t){throw console.error("Error playing source",t),this.errorHandlers.forEach(r=>r(t instanceof Error?t:new Error(String(t)))),t}}async loadSrc(e){console.log(`[RPlayer] loadSrc appelé avec: ${e}`),e.startsWith("/")&&!e.startsWith("//")&&typeof window<"u"&&(e=`${window.location.origin}${e}`,console.log(`[RPlayer] URL relative convertie en absolue: ${e}`));try{this.stop();const t=this.isHlsUrl(e),r=this.isM3uUrl(e);let s="Direct";if(t?s="HLS":r&&(s="M3U standard"),console.log(`[RPlayer] Type de source: ${s}`),t)try{const o=await h(this,e,void 0,!1);return this.hls=o,this.lastSrc=e,this.isHls=!0,Promise.resolve()}catch(o){throw console.error("Error initializing HLS source:",o),o}else if(this.isM3uUrl(e))try{console.log(`[RPlayer] Attempting to load M3U standard playlist: ${e}`);const o=await c(this,e);if(console.log(`[RPlayer] URL extracted from M3U playlist: ${o}`),o===e)throw new Error("The URL extracted from the playlist is identical to the playlist URL");return this.lastSrc=e,this.loadSrc(o)}catch(o){console.error("[RPlayer] Erreur lors du chargement de la playlist M3U:",o);const i=o instanceof Error?o:new Error(`Échec de l'analyse de la playlist M3U: ${String(o)}`);throw this.errorHandlers.forEach(a=>a(i)),i}else return console.log(`[RPlayer] Chargement direct sans lecture: ${e}`),this.src=e,this.lastSrc=e,this.isHls=!1,new Promise((o,i)=>{const a=()=>{this.removeEventListener("loadedmetadata",a),this.removeEventListener("error",n),o()},n=()=>{this.removeEventListener("loadedmetadata",a),this.removeEventListener("error",n);const d=new Error(`Échec du chargement de la source: ${e}`);this.errorHandlers.forEach(p=>p(d)),i(d)};this.addEventListener("loadedmetadata",a,{once:!0}),this.addEventListener("error",n,{once:!0}),this.load()})}catch(t){throw console.error("Error loading source",t),this.errorHandlers.forEach(r=>r(t instanceof Error?t:new Error(String(t)))),t}}stop(){this.pause(),this.currentTime=0,this.hls&&(this.hls.destroy(),this.hls=null),this.isHls=!1,this.playbackHandlers.forEach(e=>e("stopped"))}rewind(e){this.currentTime=Math.max(this.currentTime-e,0)}forward(e){this.duration&&isFinite(this.duration)?this.currentTime=Math.min(this.currentTime+e,this.duration):this.currentTime+=e}upVolume(){this.volume=Math.min(this.volume+.1,1),this.volume=parseFloat(this.volume.toFixed(2))}downVolume(){this.volume=Math.max(this.volume-.1,0),this.volume=parseFloat(this.volume.toFixed(2))}setVolume(e){if(e<0||e>1)throw new Error("Volume level must be between 0 and 1");this.volume=parseFloat(e.toFixed(2))}mute(){this.muted=!this.muted}updateMediaSessionMetadata(e="",t="RPlayer",r="Audio Stream"){if("mediaSession"in navigator)try{navigator.mediaSession.metadata=new MediaMetadata({title:e||this.lastSrc||"Unknown Track",artist:t,album:r,artwork:[{src:"/images/favicon.png",sizes:"96x96",type:"image/png"},{src:"/images/icons-192.png",sizes:"192x192",type:"image/png"}]}),console.log(`[RPlayer] MediaSession metadata updated: ${e}`)}catch(s){console.error("[RPlayer] Error updating MediaSession metadata:",s)}}destroy(){if(this.stop(),this.playbackHandlers.length=0,this.errorHandlers.length=0,"mediaSession"in navigator)try{["play","pause","stop","seekforward","seekbackward","previoustrack","nexttrack"].forEach(e=>{try{navigator.mediaSession.setActionHandler(e,null)}catch{}})}catch(e){console.warn("[RPlayer] Error clearing MediaSession handlers:",e)}this.hls&&(this.hls.destroy(),this.hls=null)}}return y});
//# sourceMappingURL=rplayer.umd.min.js.map
