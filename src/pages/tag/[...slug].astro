---
export const prerender = true;

import Layout from "../../layouts/Layout.astro";
import Footer from "../../components/Footer.astro";
import RadioSearch from "../../components/RadioSearch/RadioSearch.js";
import { fetchPopularTagsSorted, fetchStationsByTerm, SearchType } from "../../api/radio-browser";
import MarkdownSection from "../../components/MarkdownSection.astro";
import { Content as TagContent } from "../../content/tag.md";
import CookieConsent from "../../components/CookieConsent/CookieConsent.js";

export async function getStaticPaths() {
  const limit = 16; // Limite le nombre de tags/pages générées
  const stationLimit = 16; // Limite le nombre de stations par page
  const allTags = await fetchPopularTagsSorted(limit);
  const paths = [];

  // Page d'accueil des tags (route: /tag)
  paths.push({ params: { slug: undefined }, props: {
    preloadedTags: allTags,
    initialTag: "",
    preloadedStations: [],
    pageName: "",
    isIndex: true,
  }});

  // Pages détail pour chaque tag (route: /tag/[slug])
  for (const tag of allTags) {
    const preloadedStations = await fetchStationsByTerm({
      term: tag.name,
      type: SearchType.Tag,
      limit: stationLimit,
    });
    paths.push({
      params: { slug: tag.slug }, // string, not array
      props: {
        preloadedTags: allTags,
        initialTag: tag.slug,
        preloadedStations,
        pageName: tag.name,
        limit: stationLimit,
        isIndex: false,
      }
    });
  }
  return paths;
}

const { preloadedTags = [], initialTag, preloadedStations, pageName, isIndex } = Astro.props;
---

<Layout title={isIndex ? "Browse radio genres" : `RPlayer in action – ${pageName} radio stations`}>
  {isIndex ? (
    <MarkdownSection>
      <TagContent />
    </MarkdownSection>
  ) : (
    <>
      <CookieConsent client:only="react" />

      <section class="p-0 border-0 rounded-none shadow-none my-8 sm:p-6 text-white sm:rounded-lg sm:border-2 sm:border-primary">
        <h1 class="font-bold mb-0 text-primary text-4xl">{pageName} stations</h1>
        <p class="mt-6">
          Try <span class="font-semibold">R<span class="text-primary">Player</span></span> in action! Instantly listen to online radio stations from <span class="text-primary font-semibold">{pageName}</span>. Explore, play, and discover how RPlayer makes radio streaming simple and enjoyable for every country.
        </p>
      </section>

      <RadioSearch
        client:only="react"
        initialVisibleCount={8}
        preloadedStations={preloadedStations}
      />
    </>
  )}
  <Footer
    items={preloadedTags}
    activeSlug={initialTag}
    isIndex={isIndex}
    basePath="tag"
    activeSection="tag"
  />
</Layout>
